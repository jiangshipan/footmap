package com.jsp.footmap.model;import java.util.*;import java.util.concurrent.ConcurrentHashMap;import java.util.concurrent.CopyOnWriteArrayList;/** * 线程安全的单例模式 (使用内部类实现) */public class Task {    // volatile 因为有两个线程对他们操作    private CopyOnWriteArrayList<Record> taskList = new CopyOnWriteArrayList<>();    // 记录便利taskList的位置    private int pos = 0;    private static class Holder {        private static Task task = new Task();    }    private Task(){}    //添加任务方法    public void produceTask(Record record){        taskList.add(record);    }    //得到任务方法    public CopyOnWriteArrayList<Record> assumeTask() {        return taskList;    }    public void cleanAllTask() {        taskList.clear();    }    public static Task getTask(){        return Holder.task;    }    public int getPos() {        return pos;    }    public void setPos(int pos) {        this.pos = pos;    }}