package com.jsp.footmap.controller;import com.jsp.footmap.service.CommentService;import com.jsp.footmap.utils.Response;import com.jsp.footmap.utils.jsonUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import java.util.Map;@RequestMapping("/comment")@Controllerpublic class CommentController {    private static final Logger logger = LoggerFactory.getLogger(CommentController.class);    @Autowired    private CommentService commentService;    /**     * 新增一条评论     * @param jsonStr     * @return     */    @RequestMapping(path = "/add", method = {RequestMethod.POST})    @ResponseBody    public Response addComment(@RequestBody String jsonStr) {        try {            Map<String, String> map = jsonUtils.StrToMap(jsonStr);            String sid = map.get("sid");            if (sid == null) {                return new Response(1, "sid不能为空");            }            String comment = map.get("comment");            commentService.addComment(Integer.parseInt(sid), comment);            return new Response(0, "新增成功");        } catch (Exception e) {            logger.error("addComment:" + e.getMessage());            return new Response(1, "新增失败");        }    }    @RequestMapping(path = "/get", method = {RequestMethod.GET})    @ResponseBody    public Response getComment(@RequestParam("sid") int sid) {        try {            return new Response(0, "查询成功", commentService.getComments(sid));        } catch (Exception e) {            logger.error("getComment:" + e.getMessage());            return new Response(1, "查询失败");        }    }    @RequestMapping(path = "/addReply", method = {RequestMethod.POST})    @ResponseBody    public Response addReply(@RequestBody String jsonStr) {        try {            Map<String, String> map = jsonUtils.StrToMap(jsonStr);            String cid = map.get("cid");            String reply = map.get("reply");            if (cid == null) {                return new Response(1, "cid不能为空");            }            commentService.addReply(Integer.parseInt(cid), reply);            return new Response(0, "新增成功");        } catch (Exception e) {            logger.error("addReply:" + e.getMessage());            return new Response(1,"新增失败");        }    }    @RequestMapping("/dele")    @ResponseBody    public Response deleComment(@RequestParam("cid") int cid) {        try {            commentService.deleComment(cid);            return new Response(0, "删除成功");        } catch (Exception e){            logger.error("deleComment:" + e.getMessage());            return new Response(1, "删除失败");        }    }}