package com.jsp.footmap.controller;import com.jsp.footmap.service.RecordService;import com.jsp.footmap.utils.Response;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.CookieValue;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import java.util.Map;@Controller@RequestMapping("/record")public class RecordController {    private static final Logger logger = LoggerFactory.getLogger(RecordController.class);    @Autowired    private RecordService recordService;    @RequestMapping("/addRecord")    @ResponseBody    public Response addRecord(@RequestParam("targetTime") String targetTime, @RequestParam("remarks") String remarks,                              @RequestParam("targetPlace") String targetPlace, @CookieValue("auth_token") String auth_token) {        try {            Map<String, String> map = recordService.addRecord(targetTime, remarks, targetPlace, auth_token);            if (map.get("msg").equals("新增成功")) {                return new Response(0, map.get("msg"));            } else {                return new Response(1, map.get("msg"));            }        } catch (Exception e){            logger.error("addRecord:" + e.getMessage());            return new Response(1, "新增失败");        }    }    /**     * todo: 延时范围？ 若目标时间距离现在过长。总不能一直运行延时吧？     * @param currentPlace     * @param auth_token     */    @RequestMapping("/remindUser")    public void remindUser(@RequestParam("currentPlace") String currentPlace, @CookieValue("auth_token") String auth_token) {        try {            WebSocketServer item = new WebSocketServer();            boolean isMatched = false;            //测试Thread.sleep是否生效            int num = 0;            //一分钟判断一次            while (!isMatched) {                isMatched = recordService.isOk(currentPlace, auth_token);                System.out.println("num = " + ++num);                Thread.sleep(60000);            }            item.sendMessageToUser("时间地点匹配", auth_token);            item.onClose();        } catch (Exception e) {            logger.error("remindUser" + e.getMessage());        }    }}