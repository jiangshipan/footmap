package com.jsp.footmap.Configuration;import com.jsp.footmap.interceptor.CorsInterceptor;import com.jsp.footmap.interceptor.LoginRequiredInterceptor;import com.jsp.footmap.interceptor.PassportInterceptor;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import org.springframework.web.servlet.config.annotation.CorsRegistry;import org.springframework.web.servlet.config.annotation.InterceptorRegistry;import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;@Componentpublic class footmapWebConfiguration extends WebMvcConfigurerAdapter {    //判断用户是谁    @Autowired    PassportInterceptor passportInterceptor;    //判断用户是否有权限访问    @Autowired    LoginRequiredInterceptor loginRequiredInterceptor;    //跨域拦截器    @Autowired    CorsInterceptor corsInterceptor;    //将拦截器注册进去    @Override    public void addInterceptors(InterceptorRegistry registry) {        //所有路径都需要拦截器        registry.addInterceptor(passportInterceptor);        //跨域拦截器(放在登陆拦截器前面)        registry.addInterceptor(corsInterceptor);        //之访问特定页面的时候需要拦截器        registry.addInterceptor(loginRequiredInterceptor).addPathPatterns("/user/**").excludePathPatterns("/user/login","/user/reg")                                                         .addPathPatterns("/record/**")                                                         .addPathPatterns("/share/**")                                                         .addPathPatterns("/like")                                                         .addPathPatterns("/disLike")                                                         .addPathPatterns(("/comment/**"));        super.addInterceptors(registry);    }//    /**//     * 跨域设置//     * @param registry//     *///    @Override//    public void addCorsMappings(CorsRegistry registry) {//        registry.addMapping("/**")//                // 设置允许跨域请求的域名//                .allowedOrigins("*")//                // 是否允许证书 不再默认开启//                .allowCredentials(true)//                // 设置允许的方法//                .allowedMethods("*")//                // 跨域允许时间//                .maxAge(3600);//    }}